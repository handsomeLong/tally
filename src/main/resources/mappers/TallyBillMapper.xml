<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tally.dao.tallybill.TallyBillMapper">

  <resultMap id="BaseResultMap" type="com.tally.dao.tallybill.model.TallyBill">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <id column="version" jdbcType="INTEGER" property="version"/>
    <result column="btype_user_id" jdbcType="INTEGER" property="btypeUserId"/>
    <result column="btype_user_name" jdbcType="VARCHAR" property="btypeUserName"/>
    <result column="btype_mobile" jdbcType="VARCHAR" property="btypeMobile"/>
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice"/>
    <result column="settle_amount" jdbcType="DECIMAL" property="settleAmount"/>
    <result column="total_number" jdbcType="INTEGER" property="totalNumber"/>
    <result column="settle_number" jdbcType="INTEGER" property="settleNumber"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile"/>
    <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    <result column="type" jdbcType="INTEGER" property="type"/>
    <result column="books_id" jdbcType="INTEGER" property="booksId"/>
    <result column="project_id" jdbcType="INTEGER" property="projectId"/>
    <result column="operator" jdbcType="INTEGER" property="operator"/>
    <result column="auit_status" jdbcType="INTEGER" property="auitStatus"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="attach" jdbcType="VARCHAR" property="attach"/>
    <result column="is_material" jdbcType="INTEGER" property="isMaterial"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="deal_time" jdbcType="VARCHAR" property="dealTime"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" extends="BaseResultMap" type="com.tally.dao.tallybill.model.TallyBill">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `version`, `btype_user_id`, `btype_user_name`, `btype_mobile`, `total_price`, `settle_amount`, `total_number`, `settle_number`, `user_id`, `user_mobile`, `user_name`, `type`, `books_id`, `project_id`, `operator`, `auit_status`, `status`, `attach`, `is_material`, `create_time`, `deal_time`
  </sql>
  <sql id="Blob_Column_List">
    `remark`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tally.dao.tallybill.model.TallyBillExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `tally_bill`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tally.dao.tallybill.model.TallyBillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `tally_bill`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List" />
    from `tally_bill`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `tally_bill`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tally.dao.tallybill.model.TallyBillExample">
    delete from `tally_bill`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tally.dao.tallybill.model.TallyBill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_bill` (
    `btype_user_id`,
    `btype_user_name`,
    `btype_mobile`,
    `total_price`,
    `settle_amount`,
    `total_number`,
    `settle_number`,
    `user_id`,
    `user_mobile`,
    `type`,
    `books_id`,
    `project_id`,
    `operator`,
    `auit_status`,
    `status`,
    `remark`,
    `attach`,
    `is_material`,
    `create_time`,
    `deal_time`
    )
    values (
    #{btypeUserId,jdbcType=INTEGER},
    #{btypeUserName,jdbcType=VARCHAR},
    #{btypeMobile,jdbcType=VARCHAR},
    #{totalPrice,jdbcType=DECIMAL},
    #{settleAmount,jdbcType=DECIMAL},
    #{totalNumber,jdbcType=INTEGER},
    #{settleNumber,jdbcType=INTEGER},
    #{userId,jdbcType=INTEGER},
    #{userMobile,jdbcType=VARCHAR},
    #{type,jdbcType=INTEGER},
    #{booksId,jdbcType=INTEGER},
    #{projectId,jdbcType=INTEGER},
    #{operator,jdbcType=INTEGER},
    #{auitStatus,jdbcType=INTEGER},
    #{status,jdbcType=INTEGER},
    #{remark,jdbcType=LONGVARCHAR},
    #{attach,jdbcType=VARCHAR},
    #{isMaterial,jdbcType=INTEGER},
    #{createTime,jdbcType=TIMESTAMP},
    #{dealTime,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.tally.dao.tallybill.model.TallyBill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_bill`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="btypeUserId != null">
        `btype_user_id`,
      </if>
      <if test="btypeUserName != null">
        `btype_user_name`,
      </if>
      <if test="btypeMobile != null">
        `btype_mobile`,
      </if>
      <if test="totalPrice != null">
        `total_price`,
      </if>
      <if test="settleAmount != null">
        `settle_amount`,
      </if>
      <if test="totalNumber != null">
        `total_number`,
      </if>
      <if test="settleNumber != null">
        `settle_number`,
      </if>
      <if test="userId != null">
        `user_id`,
      </if>
      <if test="userMobile != null">
        `user_mobile`,
      </if>
      <if test="userName != null">
        `user_name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="booksId != null">
        `books_id`,
      </if>
      <if test="projectId != null">
        `project_id`,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="auitStatus != null">
        `auit_status`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        `remark`,
      </if>
      <if test="attach != null">
        `attach`,
      </if>
      <if test="isMaterial != null">
        `is_material`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="dealTime != null">
        `deal_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="btypeUserId != null">
        #{btypeUserId,jdbcType=INTEGER},
      </if>
      <if test="btypeUserName != null">
        #{btypeUserName,jdbcType=VARCHAR},
      </if>
      <if test="btypeMobile != null">
        #{btypeMobile,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null">
        #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalNumber != null">
        #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="settleNumber != null">
        #{settleNumber,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="booksId != null">
        #{booksId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=INTEGER},
      </if>
      <if test="auitStatus != null">
        #{auitStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="attach != null">
        #{attach,jdbcType=VARCHAR},
      </if>
      <if test="isMaterial != null">
        #{isMaterial,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null">
        #{dealTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tally.dao.tallybill.model.TallyBillExample" resultType="java.lang.Integer">
    select count(*) from `tally_bill`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `tally_bill`
    <set>
      <if test="record.btypeUserId != null">
        `btype_user_id` = #{record.btypeUserId,jdbcType=INTEGER},
      </if>
      <if test="record.btypeUserName != null">
        `btype_user_name` = #{record.btypeUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.btypeMobile != null">
        `btype_mobile` = #{record.btypeMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null">
        `total_price` = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.settleAmount != null">
        `settle_amount` = #{record.settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalNumber != null">
        `total_number` = #{record.totalNumber,jdbcType=INTEGER},
      </if>
      <if test="record.settleNumber != null">
        `settle_number` = #{record.settleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        `user_id` = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userMobile != null">
        `user_mobile` = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.booksId != null">
        `books_id` = #{record.booksId,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        `project_id` = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        `operator` = #{record.operator,jdbcType=INTEGER},
      </if>
      <if test="record.auitStatus != null">
        `auit_status` = #{record.auitStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.attach != null">
        `attach` = #{record.attach,jdbcType=VARCHAR},
      </if>
      <if test="record.isMaterial != null">
        `is_material` = #{record.isMaterial,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealTime != null">
        `deal_time` = #{record.dealTime,jdbcType=VARCHAR}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `tally_bill`
    <set>
      `btype_user_id` = #{record.btypeUserId,jdbcType=INTEGER},
      `btype_user_name` = #{record.btypeUserName,jdbcType=VARCHAR},
      `btype_mobile` = #{record.btypeMobile,jdbcType=VARCHAR},
      `total_price` = #{record.totalPrice,jdbcType=DECIMAL},
      `settle_amount` = #{record.settleAmount,jdbcType=DECIMAL},
      `total_number` = #{record.totalNumber,jdbcType=INTEGER},
      `settle_number` = #{record.settleNumber,jdbcType=INTEGER},
      `user_id` = #{record.userId,jdbcType=INTEGER},
      `user_mobile` = #{record.userMobile,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      `books_id` = #{record.booksId,jdbcType=INTEGER},
      `project_id` = #{record.projectId,jdbcType=INTEGER},
      `operator` = #{record.operator,jdbcType=INTEGER},
      `auit_status` = #{record.auitStatus,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      `remark` = #{record.remark,jdbcType=LONGVARCHAR},
      `attach` = #{record.attach,jdbcType=VARCHAR},
      `is_material` = #{record.isMaterial,jdbcType=INTEGER},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `deal_time` = #{record.dealTime,jdbcType=VARCHAR}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `tally_bill`
    <set>
      `btype_user_id` = #{record.btypeUserId,jdbcType=INTEGER},
      `btype_user_name` = #{record.btypeUserName,jdbcType=VARCHAR},
      `btype_mobile` = #{record.btypeMobile,jdbcType=VARCHAR},
      `total_price` = #{record.totalPrice,jdbcType=DECIMAL},
      `settle_amount` = #{record.settleAmount,jdbcType=DECIMAL},
      `total_number` = #{record.totalNumber,jdbcType=INTEGER},
      `settle_number` = #{record.settleNumber,jdbcType=INTEGER},
      `user_id` = #{record.userId,jdbcType=INTEGER},
      `user_mobile` = #{record.userMobile,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      `books_id` = #{record.booksId,jdbcType=INTEGER},
      `project_id` = #{record.projectId,jdbcType=INTEGER},
      `operator` = #{record.operator,jdbcType=INTEGER},
      `auit_status` = #{record.auitStatus,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      `attach` = #{record.attach,jdbcType=VARCHAR},
      `is_material` = #{record.isMaterial,jdbcType=INTEGER},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `deal_time` = #{record.dealTime,jdbcType=VARCHAR}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tally.dao.tallybill.model.TallyBill">
    update `tally_bill`
    <set>
      <if test="btypeUserId != null">
        `btype_user_id` = #{btypeUserId,jdbcType=INTEGER},
      </if>
      <if test="btypeUserName != null">
        `btype_user_name` = #{btypeUserName,jdbcType=VARCHAR},
      </if>
      <if test="btypeMobile != null">
        `btype_mobile` = #{btypeMobile,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        `total_price` = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null">
        `settle_amount` = #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalNumber != null">
        `total_number` = #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="settleNumber != null">
        `settle_number` = #{settleNumber,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        `user_id` = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null">
        `user_mobile` = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="booksId != null">
        `books_id` = #{booksId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        `project_id` = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=INTEGER},
      </if>
      <if test="auitStatus != null">
        `auit_status` = #{auitStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="attach != null">
        `attach` = #{attach,jdbcType=VARCHAR},
      </if>
      <if test="isMaterial != null">
        `is_material` = #{isMaterial,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null">
        `deal_time` = #{dealTime,jdbcType=VARCHAR}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tally.dao.tallybill.model.TallyBill">
    update `tally_bill`
    <set>
      `btype_user_id` = #{btypeUserId,jdbcType=INTEGER},
      `btype_user_name` = #{btypeUserName,jdbcType=VARCHAR},
      `btype_mobile` = #{btypeMobile,jdbcType=VARCHAR},
      `total_price` = #{totalPrice,jdbcType=DECIMAL},
      `settle_amount` = #{settleAmount,jdbcType=DECIMAL},
      `total_number` = #{totalNumber,jdbcType=INTEGER},
      `settle_number` = #{settleNumber,jdbcType=INTEGER},
      `user_id` = #{userId,jdbcType=INTEGER},
      `user_mobile` = #{userMobile,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      `books_id` = #{booksId,jdbcType=INTEGER},
      `project_id` = #{projectId,jdbcType=INTEGER},
      `operator` = #{operator,jdbcType=INTEGER},
      `auit_status` = #{auitStatus,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `remark` = #{remark,jdbcType=LONGVARCHAR},
      `attach` = #{attach,jdbcType=VARCHAR},
      `is_material` = #{isMaterial,jdbcType=INTEGER},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `deal_time` = #{dealTime,jdbcType=VARCHAR}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tally.dao.tallybill.model.TallyBill">
    update `tally_bill`
    <set>
      `btype_user_id` = #{btypeUserId,jdbcType=INTEGER},
      `btype_user_name` = #{btypeUserName,jdbcType=VARCHAR},
      `btype_mobile` = #{btypeMobile,jdbcType=VARCHAR},
      `total_price` = #{totalPrice,jdbcType=DECIMAL},
      `settle_amount` = #{settleAmount,jdbcType=DECIMAL},
      `total_number` = #{totalNumber,jdbcType=INTEGER},
      `settle_number` = #{settleNumber,jdbcType=INTEGER},
      `user_id` = #{userId,jdbcType=INTEGER},
      `user_mobile` = #{userMobile,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      `books_id` = #{booksId,jdbcType=INTEGER},
      `project_id` = #{projectId,jdbcType=INTEGER},
      `operator` = #{operator,jdbcType=INTEGER},
      `auit_status` = #{auitStatus,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `attach` = #{attach,jdbcType=VARCHAR},
      `is_material` = #{isMaterial,jdbcType=INTEGER},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `deal_time` = #{dealTime,jdbcType=VARCHAR}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByVersion" parameterType="com.tally.dao.tallybill.model.TallyBill">
    update `tally_bill`
    <set>
      <if test="btypeUserId != null">
        `btype_user_id` = #{btypeUserId,jdbcType=INTEGER},
      </if>
      <if test="btypeUserName != null">
        `btype_user_name` = #{btypeUserName,jdbcType=VARCHAR},
      </if>
      <if test="btypeMobile != null">
        `btype_mobile` = #{btypeMobile,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        `total_price` = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null">
        `settle_amount` = #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalNumber != null">
        `total_number` = #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="settleNumber != null">
        `settle_number` = #{settleNumber,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        `user_id` = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null">
        `user_mobile` = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="booksId != null">
        `books_id` = #{booksId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        `project_id` = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=INTEGER},
      </if>
      <if test="auitStatus != null">
        `auit_status` = #{auitStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="attach != null">
        `attach` = #{attach,jdbcType=VARCHAR},
      </if>
      <if test="isMaterial != null">
        `is_material` = #{isMaterial,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null">
        `deal_time` = #{dealTime,jdbcType=VARCHAR},
      </if>
      version = version + 1
    </set>
    where `id` = #{id,jdbcType=INTEGER}  and  version = #{version}
  </update>
  <select id="findListByIds" resultMap="BaseResultMap">
    select *  from `tally_bill` where id in
    <if test="list.size>0">
      <foreach close=")" collection="list" item="listItem" open="(" separator=",">
        #{listItem}
      </foreach>
     and  btype_user_id = #{userId}
    </if>
  </select>
    <select id="materialCount"  parameterType="com.tally.dao.tallybill.model.TallyBill" resultType="java.util.Map">
    SELECT
        *
    FROM
	(
		SELECT
			sum(tb.total_number-tb.settle_number) AS jc
		FROM
			tally_bill tb
		WHERE
			((tb.user_id = #{userId} and tb.type = 100) or (tb.btype_user_id=#{userId} and tb.type=101)) and tb.is_material = #{isMaterial} and tb.auit_status=101 and tb.status=100) as jc,
	(
		SELECT
			sum(tb.total_number-tb.settle_number) AS jr
		FROM
			tally_bill tb
		WHERE
			((tb.user_id = #{userId} and tb.type = 101) or (tb.btype_user_id = #{userId} and tb.type = 100)) and tb.is_material = #{isMaterial} and tb.auit_status=101 and tb.status=100) as jr
    </select>
  <select id="sfCountplus"  resultType="java.math.BigDecimal">
    SELECT
    ifnull(sum(tb.total_price-tb.settle_amount),0)
    FROM
    tally_bill tb
    WHERE 1=1
    <if test="null!=userId">
      and tb.user_id = #{userId}
    </if>
    <if test="null!=btypeUserId">
      and tb.btype_user_id = #{btypeUserId}
    </if>
      and tb.type = #{type}  and  tb.is_material = 0 and tb.auit_status = 101 and tb.status=100
  </select>
  <select id="sfCount"  parameterType="com.tally.dao.tallybill.model.TallyBill" resultType="java.util.Map">
              SELECT
                  *
              FROM
			(
				SELECT
					ifnull(sum(tb.total_price-tb.settle_amount),0) AS ys
				FROM
					tally_bill tb
				WHERE
                    tb.user_id = #{userId}
					<if test="null!=btypeUserId">
                      and tb.btype_user_id = #{btypeUserId}
                    </if>
					and  tb.type = 100 and tb.is_material = 0 and tb.auit_status = 101 and tb.status=100) as jc,
			(
				SELECT
					ifnull(sum(tb.total_price-tb.settle_amount),0) AS yf
				FROM
					tally_bill tb
				WHERE
					tb.user_id = #{userId}
                    <if test="null!=btypeUserId">
                      and tb.btype_user_id = #{btypeUserId}
                    </if>
                    and tb.type = 101 and tb.is_material = 0 and tb.auit_status = 101 and tb.status=100) as jr
  </select>
    <select id="findList"   resultMap="BaseResultMap">
          SELECT
              b.*
          FROM
              tally_bill b
          WHERE
          <if test="userIdList.size>0">
            user_id IN
            <foreach collection="userIdList" open="(" separator="," close=")" item="userId">
                  #{userId}
            </foreach>
          </if>
          <if test="btypeUserMobileList.size>0">
            btype_mobile IN
            <foreach collection="btypeUserMobileList" open="(" separator="," close=")" item="btypeMobile">
                  #{btypeMobile}
            </foreach>
          </if>
          <if test="null!=bill.isMaterial">
            AND is_material = #{bill.isMaterial}
          </if>
          <if test="null!=bill.status">
            AND status = #{bill.status}
          </if>
          <if test="null!=bill.type">
            AND type = #{bill.type}
          </if>
          <if test="null!=bill.auitStatus">
            AND auit_status = #{bill.auitStatus}
          </if>
          <if test="null!=bill.btypeUserId">
            AND btype_user_id = #{bill.btypeUserId}
          </if>
          ORDER BY id desc
    </select>
  <select id="billCollectList"   parameterType="com.tally.dao.tallybill.model.TallyBill" resultMap="BaseResultMap">
      SELECT
          b.btype_user_id,
          b.btype_user_name,
          b.btype_mobile,
          b.type,
          b.user_mobile,
          b.remark,
          sum(b.total_price) as total_price,
          sum(b.settle_amount) as settle_amount
      FROM
          tally_bill b
      WHERE 1=1
      <if test="null!=userId">
        AND b.user_id = #{userId}
      </if>
      <if test="null!=type">
        AND b.type = #{type}
      </if>
      <if test="null!=auitStatus">
        AND b.auit_status = #{auitStatus}
      </if>
      <if test="null!=isMaterial">
        AND b.is_material= #{isMaterial}
      </if>
      <if test="null!=status">
        AND b.status= #{status}
      </if>
      group by b.btype_user_id
  </select>
    <select id="findMaterialList" resultMap="BaseResultMap">
      select * from tally_bill
      where
      (
        (
        user_id= #{userId}
        <if test="null!=type1">
          and type = #{type1}
        </if>
        <if test="null!=btypeUserId">
          and btype_user_id = #{btypeUserId}
        </if>
        )
      or
        (
        btype_user_id = #{userId}
        <if test="null!=type2">
          and type= #{type2}
        </if>
        <if test="null!=btypeUserId">
          and user_id = #{btypeUserId}
        </if>
        )
      )
       <if test="null!=status">
         and status = #{status}
       </if>
       and is_material=1 and auit_status=101  and (total_number-settle_number)>0 order by id desc
    </select>
  <select id="findMaterialCollectList" resultMap="BaseResultMap">
      select  bill.user_id,bill.user_name,bill.user_mobile,SUM(bill.total_number) as total_number,
              SUM(bill.settle_number) as settle_number,bill.btype_user_id,bill.btype_user_name,
				bill.btype_mobile from (
select
		b1.user_id,b1.user_name,b1.user_mobile,b1.total_number,
		b1.settle_number,b1.btype_user_id,b1.btype_user_name,
		b1.btype_mobile
		from tally_bill b1 where b1.user_id= #{userId} and b1.type = #{type1}
        <if test="null!=status">
          and b1.status = #{status}
        </if>
		 and b1.is_material=1 and b1.auit_status=101
union all
 select
	 b2.btype_user_id as user_id,b2.btype_user_name as user_name,b2.btype_mobile as user_mobile,
	 b2.total_number,b2.settle_number,b2.user_id as btype_user_id,b2.user_name as btype_user_name,
	 b2.user_mobile as btype_mobile
	 from tally_bill b2 where b2.btype_user_id = #{userId} and b2.type=#{type2}
    <if test="null!=status">
      and b2.status = #{status}
    </if>
     and b2.is_material=1 and b2.auit_status=101
) as bill where (total_number-settle_number)>0 GROUP BY bill.btype_user_id
  </select>
  <select id="findMaterialShList" resultType="com.tally.dao.tallybill.model.TallyBill">
    select  bill.id,bill.user_id,bill.user_name,bill.user_mobile,SUM(bill.total_number) as total_number,
    bill.settle_number,bill.btype_user_id,bill.btype_user_name,
    bill.btype_mobile from (
    select
    b1.id,b1.user_id,b1.user_name,b1.user_mobile,b1.total_number,
    b1.settle_number,b1.btype_user_id,b1.btype_user_name,
    b1.btype_mobile
    from tally_bill b1 where b1.user_id= #{userId} and b1.type = #{type1}
    <if test="null!=status">
      and b1.status = #{status}
    </if>
    and b1.is_material=1 and b1.auit_status=101
    union all
    select
    b2.id,b2.btype_user_id as user_id,b2.btype_user_name as user_name,b2.btype_mobile as user_mobile,
    b2.total_number,b2.settle_number,b2.user_id as btype_user_id,b2.user_name as btype_user_name,
    b2.user_mobile as btype_mobile
    from tally_bill b2 where b2.btype_user_id = #{userId} and b2.type=#{type2}
    <if test="null!=status">
      and b2.status = #{status}
    </if>
    and b2.is_material=1 and b2.auit_status=101
    ) as bill
  </select>

</mapper>