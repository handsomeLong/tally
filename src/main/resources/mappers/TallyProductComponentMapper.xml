<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tally.dao.tallyproductcomponent.TallyProductComponentMapper">

  <resultMap id="BaseResultMap" type="com.tally.dao.tallyproductcomponent.model.TallyProductComponent">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="product_id" jdbcType="INTEGER" property="productId"/>
    <result column="component_product_id" jdbcType="INTEGER" property="componentProductId"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `product_id`, `component_product_id`, `user_id`, `create_time`
  </sql>
  <select id="selectByExample" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `tally_product_component`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `tally_product_component`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `tally_product_component`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponentExample">
    delete from `tally_product_component`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_product_component` (
      `product_id`, 
      `component_product_id`, 
      `user_id`, 
      `create_time`
    )
    values (
      #{productId,jdbcType=INTEGER}, 
      #{componentProductId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_product_component`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
      `product_id`,
      </if>
      <if test="componentProductId != null">
      `component_product_id`,
      </if>
      <if test="userId != null">
      `user_id`,
      </if>
      <if test="createTime != null">
      `create_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="componentProductId != null">
        #{componentProductId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponentExample" resultType="java.lang.Integer">
    select count(*) from `tally_product_component`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `tally_product_component`
    <set>
      <if test="record.productId != null">
      `product_id` = #{record.productId,jdbcType=INTEGER}, 
      </if>
      <if test="record.componentProductId != null">
      `component_product_id` = #{record.componentProductId,jdbcType=INTEGER}, 
      </if>
      <if test="record.userId != null">
      `user_id` = #{record.userId,jdbcType=INTEGER}, 
      </if>
      <if test="record.createTime != null">
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `tally_product_component`
    <set>
      `product_id` = #{record.productId,jdbcType=INTEGER}, 
      `component_product_id` = #{record.componentProductId,jdbcType=INTEGER}, 
      `user_id` = #{record.userId,jdbcType=INTEGER}, 
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponent">
    update `tally_product_component`
    <set>
      <if test="productId != null">
      `product_id` = #{productId,jdbcType=INTEGER}, 
      </if>
      <if test="componentProductId != null">
      `component_product_id` = #{componentProductId,jdbcType=INTEGER}, 
      </if>
      <if test="userId != null">
      `user_id` = #{userId,jdbcType=INTEGER}, 
      </if>
      <if test="createTime != null">
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tally.dao.tallyproductcomponent.model.TallyProductComponent">
    update `tally_product_component`
    <set>
      `product_id` = #{productId,jdbcType=INTEGER}, 
      `component_product_id` = #{componentProductId,jdbcType=INTEGER}, 
      `user_id` = #{userId,jdbcType=INTEGER}, 
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>