<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tally.dao.tallyaccount.TallyAccountMapper">

  <resultMap id="BaseResultMap" type="com.tally.dao.tallyaccount.model.TallyAccount">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="type_id" jdbcType="INTEGER" property="typeId"/>
    <result column="amout" jdbcType="DECIMAL" property="amout"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="books_id" jdbcType="INTEGER" property="booksId"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <!--left join column-->
    <result column="type_name" jdbcType="TIMESTAMP" property="typeName"/>
    <result column="type_code" jdbcType="TIMESTAMP" property="typeCode"/>
    <result column="asset_class" jdbcType="TIMESTAMP" property="assetClass"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `type_id`, `amout`, `user_id`, `books_id`, `create_time`
  </sql>
  <select id="selectByExample" parameterType="com.tally.dao.tallyaccount.model.TallyAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    *
    from `tally_account` LEFT JOIN tally_account_type type ON type.id = type_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    t.*,type.type_name,type.type_code,type.asset_class
    from `tally_account` t LEFT JOIN tally_account_type type ON type.id = t.type_id
    where t.`id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `tally_account`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tally.dao.tallyaccount.model.TallyAccountExample">
    delete from `tally_account`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tally.dao.tallyaccount.model.TallyAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_account` (
      `type_id`, 
      `amout`, 
      `user_id`, 
      `books_id`, 
      `create_time`
    )
    values (
      #{typeId,jdbcType=INTEGER}, 
      #{amout,jdbcType=DECIMAL}, 
      #{userId,jdbcType=INTEGER}, 
      #{booksId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.tally.dao.tallyaccount.model.TallyAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_account`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
      `type_id`,
      </if>
      <if test="amout != null">
      `amout`,
      </if>
      <if test="userId != null">
      `user_id`,
      </if>
      <if test="booksId != null">
      `books_id`,
      </if>
      <if test="createTime != null">
      `create_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="amout != null">
        #{amout,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="booksId != null">
        #{booksId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tally.dao.tallyaccount.model.TallyAccountExample" resultType="java.lang.Integer">
    select count(*) from `tally_account`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `tally_account`
    <set>
      <if test="record.typeId != null">
      `type_id` = #{record.typeId,jdbcType=INTEGER}, 
      </if>
      <if test="record.amout != null">
      `amout` = #{record.amout,jdbcType=DECIMAL}, 
      </if>
      <if test="record.userId != null">
      `user_id` = #{record.userId,jdbcType=INTEGER}, 
      </if>
      <if test="record.booksId != null">
      `books_id` = #{record.booksId,jdbcType=INTEGER}, 
      </if>
      <if test="record.createTime != null">
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `tally_account`
    <set>
      `type_id` = #{record.typeId,jdbcType=INTEGER}, 
      `amout` = #{record.amout,jdbcType=DECIMAL}, 
      `user_id` = #{record.userId,jdbcType=INTEGER}, 
      `books_id` = #{record.booksId,jdbcType=INTEGER}, 
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tally.dao.tallyaccount.model.TallyAccount">
    update `tally_account`
    <set>
      <if test="typeId != null">
      `type_id` = #{typeId,jdbcType=INTEGER}, 
      </if>
      <if test="amout != null">
      `amout` = #{amout,jdbcType=DECIMAL}, 
      </if>
      <if test="userId != null">
      `user_id` = #{userId,jdbcType=INTEGER}, 
      </if>
      <if test="booksId != null">
      `books_id` = #{booksId,jdbcType=INTEGER}, 
      </if>
      <if test="createTime != null">
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tally.dao.tallyaccount.model.TallyAccount">
    update `tally_account`
    <set>
      `type_id` = #{typeId,jdbcType=INTEGER}, 
      `amout` = #{amout,jdbcType=DECIMAL}, 
      `user_id` = #{userId,jdbcType=INTEGER}, 
      `books_id` = #{booksId,jdbcType=INTEGER}, 
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>