<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tally.dao.tallystoragecheck.TallyStorageCheckMapper">

  <resultMap id="BaseResultMap" type="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" extends="BaseResultMap" type="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    <result column="check_results" jdbcType="LONGVARCHAR" property="checkResults"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `create_time`, `user_id`
  </sql>
  <sql id="Blob_Column_List">
    `check_results`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheckExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `tally_storage_check`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `tally_storage_check`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List" />
    from `tally_storage_check`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `tally_storage_check`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheckExample">
    delete from `tally_storage_check`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    insert into `tally_storage_check` (
      `id`,
      `create_time`, 
      `user_id`, 
      `check_results`
    )
    values (
      #{id,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, 
      #{checkResults,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    insert into `tally_storage_check`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `id`,
      <if test="createTime != null">
      `create_time`,
      </if>
      <if test="userId != null">
      `user_id`,
      </if>
      <if test="checkResults != null">
      `check_results`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="checkResults != null">
        #{checkResults,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheckExample" resultType="java.lang.Integer">
    select count(*) from `tally_storage_check`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `tally_storage_check`
    <set>
      <if test="record.createTime != null">
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="record.userId != null">
      `user_id` = #{record.userId,jdbcType=INTEGER}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `tally_storage_check`
    <set>
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
      `user_id` = #{record.userId,jdbcType=INTEGER}, 
      `check_results` = #{record.checkResults,jdbcType=LONGVARCHAR}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `tally_storage_check`
    <set>
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
      `user_id` = #{record.userId,jdbcType=INTEGER}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    update `tally_storage_check`
    <set>
      <if test="createTime != null">
      `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="userId != null">
      `user_id` = #{userId,jdbcType=INTEGER}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    update `tally_storage_check`
    <set>
    `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
    `user_id` = #{userId,jdbcType=INTEGER}, 
    `check_results` = #{checkResults,jdbcType=LONGVARCHAR}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tally.dao.tallystoragecheck.model.TallyStorageCheck">
    update `tally_storage_check`
    <set>
      `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
      `user_id` = #{userId,jdbcType=INTEGER}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>