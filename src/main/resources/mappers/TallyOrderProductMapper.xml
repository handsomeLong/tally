<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tally.dao.tallyorderproduct.TallyOrderProductMapper">

  <resultMap id="BaseResultMap" type="com.tally.api.outputDto.TallyOrderProductOutputDto">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="order_id" jdbcType="INTEGER" property="orderId"/>
    <result column="product_id" jdbcType="INTEGER" property="productId"/>
    <result column="product_no" jdbcType="LONGVARCHAR" property="productNo"/>
    <result column="product_name" jdbcType="LONGVARCHAR" property="productName"/>
    <result column="product_spec_id" jdbcType="INTEGER" property="productSpecId"/>
    <result column="spec_price" jdbcType="DECIMAL" property="specPrice"/>
    <result column="spec_num" jdbcType="INTEGER" property="specNum"/>
    <result column="spec_num_finsh" jdbcType="INTEGER" property="specNumFinsh"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `order_id`, `product_id`, `product_no`, `product_name`, `product_spec_id`, `spec_price`, `spec_num`, `spec_num_finsh`, `create_time`
  </sql>
  <select id="selectByExample" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `tally_order_product`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByOrderId" resultMap="BaseResultMap">
      select
      top.*,tps.spec_name as product_spec_name,tp.name as product_name
      from `tally_order_product` top
      left  join  tally_product_spec tps on tps.id = top.product_spec_id
      left  join  tally_product tp on tp.id = top.product_id
      where `order_id` = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `tally_order_product`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `tally_order_product`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProductExample">
    delete from `tally_order_product`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_order_product` (
      `order_id`, 
      `product_id`, 
      `product_no`, 
      `product_name`, 
      `product_spec_id`, 
      `spec_price`, 
      `spec_num`, 
      `spec_num_finsh`, 
      `create_time`
    )
    values (
      #{orderId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, 
      #{productNo,jdbcType=LONGVARCHAR}, 
      #{productName,jdbcType=LONGVARCHAR}, 
      #{productSpecId,jdbcType=INTEGER}, 
      #{specPrice,jdbcType=DECIMAL}, 
      #{specNum,jdbcType=INTEGER}, 
      #{specNumFinsh,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_order_product`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
      `order_id`,
      </if>
      <if test="productId != null">
      `product_id`,
      </if>
      <if test="productNo != null">
      `product_no`,
      </if>
      <if test="productName != null">
      `product_name`,
      </if>
      <if test="productSpecId != null">
      `product_spec_id`,
      </if>
      <if test="specPrice != null">
      `spec_price`,
      </if>
      <if test="specNum != null">
      `spec_num`,
      </if>
      <if test="specNumFinsh != null">
      `spec_num_finsh`,
      </if>
      <if test="createTime != null">
      `create_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=LONGVARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=LONGVARCHAR},
      </if>
      <if test="productSpecId != null">
        #{productSpecId,jdbcType=INTEGER},
      </if>
      <if test="specPrice != null">
        #{specPrice,jdbcType=DECIMAL},
      </if>
      <if test="specNum != null">
        #{specNum,jdbcType=INTEGER},
      </if>
      <if test="specNumFinsh != null">
        #{specNumFinsh,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProductExample" resultType="java.lang.Integer">
    select count(*) from `tally_order_product`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
    <select id="getProfits" resultType="java.math.BigDecimal">
      SELECT
          sum((top.spec_price-tps.spec_cost_price)*top.spec_num)
      FROM
          tally_order_product top
      LEFT JOIN tally_product_spec tps ON tps.id = top.product_spec_id
      WHERE
          top.order_id IN
          <foreach collection="ids" item="id" open="(" separator="," close=")">
             #{id}
          </foreach>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update `tally_order_product`
    <set>
      <if test="record.orderId != null">
      `order_id` = #{record.orderId,jdbcType=INTEGER}, 
      </if>
      <if test="record.productId != null">
      `product_id` = #{record.productId,jdbcType=INTEGER}, 
      </if>
      <if test="record.productNo != null">
      `product_no` = #{record.productNo,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="record.productName != null">
      `product_name` = #{record.productName,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="record.productSpecId != null">
      `product_spec_id` = #{record.productSpecId,jdbcType=INTEGER}, 
      </if>
      <if test="record.specPrice != null">
      `spec_price` = #{record.specPrice,jdbcType=DECIMAL}, 
      </if>
      <if test="record.specNum != null">
      `spec_num` = #{record.specNum,jdbcType=INTEGER}, 
      </if>
      <if test="record.specNumFinsh != null">
      `spec_num_finsh` = #{record.specNumFinsh,jdbcType=INTEGER}, 
      </if>
      <if test="record.createTime != null">
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `tally_order_product`
    <set>
      `order_id` = #{record.orderId,jdbcType=INTEGER}, 
      `product_id` = #{record.productId,jdbcType=INTEGER}, 
      `product_no` = #{record.productNo,jdbcType=LONGVARCHAR}, 
      `product_name` = #{record.productName,jdbcType=LONGVARCHAR}, 
      `product_spec_id` = #{record.productSpecId,jdbcType=INTEGER}, 
      `spec_price` = #{record.specPrice,jdbcType=DECIMAL}, 
      `spec_num` = #{record.specNum,jdbcType=INTEGER}, 
      `spec_num_finsh` = #{record.specNumFinsh,jdbcType=INTEGER}, 
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProduct">
    update `tally_order_product`
    <set>
      <if test="orderId != null">
      `order_id` = #{orderId,jdbcType=INTEGER}, 
      </if>
      <if test="productId != null">
      `product_id` = #{productId,jdbcType=INTEGER}, 
      </if>
      <if test="productNo != null">
      `product_no` = #{productNo,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="productName != null">
      `product_name` = #{productName,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="productSpecId != null">
      `product_spec_id` = #{productSpecId,jdbcType=INTEGER}, 
      </if>
      <if test="specPrice != null">
      `spec_price` = #{specPrice,jdbcType=DECIMAL}, 
      </if>
      <if test="specNum != null">
      `spec_num` = #{specNum,jdbcType=INTEGER}, 
      </if>
      <if test="specNumFinsh != null">
      `spec_num_finsh` = #{specNumFinsh,jdbcType=INTEGER}, 
      </if>
      <if test="createTime != null">
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tally.dao.tallyorderproduct.model.TallyOrderProduct">
    update `tally_order_product`
    <set>
      `order_id` = #{orderId,jdbcType=INTEGER}, 
      `product_id` = #{productId,jdbcType=INTEGER}, 
      `product_no` = #{productNo,jdbcType=LONGVARCHAR}, 
      `product_name` = #{productName,jdbcType=LONGVARCHAR}, 
      `product_spec_id` = #{productSpecId,jdbcType=INTEGER}, 
      `spec_price` = #{specPrice,jdbcType=DECIMAL}, 
      `spec_num` = #{specNum,jdbcType=INTEGER}, 
      `spec_num_finsh` = #{specNumFinsh,jdbcType=INTEGER}, 
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
    <insert id="insertBatch">
        insert into
        tally_order_product
        (
        order_id,
        product_id,
        product_no,
        product_name,
        product_spec_id,
        spec_price,
        spec_num
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.orderId,jdbcType=INTEGER},
            #{item.productId,jdbcType=INTEGER},
            #{item.productNo,jdbcType=VARCHAR},
            #{item.productName,jdbcType=VARCHAR},
            #{item.productSpecId,jdbcType=INTEGER},
            #{item.specPrice,jdbcType=DECIMAL},
            #{item.specNum,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
</mapper>