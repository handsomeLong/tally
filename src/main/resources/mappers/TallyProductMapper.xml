<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tally.dao.tallyproduct.TallyProductMapper">

  <resultMap id="BaseResultMap" type="com.tally.dao.tallyproduct.model.TallyProduct">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="LONGVARCHAR" property="name"/>
    <result column="product_no" jdbcType="LONGVARCHAR" property="productNo"/>
    <result column="product_images" jdbcType="LONGVARCHAR" property="productImages"/>
    <result column="product_description" jdbcType="LONGVARCHAR" property="productDescription"/>
    <result column="is_del" jdbcType="SMALLINT" property="isDel"/>
    <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
  </resultMap>
  <resultMap id="BaseResultMapDto" type="com.tally.api.outputDto.ProductOutputDto">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="LONGVARCHAR" property="name"/>
    <result column="product_no" jdbcType="LONGVARCHAR" property="productNo"/>
    <result column="product_images" jdbcType="LONGVARCHAR" property="productImages"/>
    <result column="product_description" jdbcType="LONGVARCHAR" property="productDescription"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
     <collection property="specList"  column="id" ofType="com.tally.api.outputDto.ProductSpecOutputDto"
                 select="com.tally.dao.tallyproductspec.TallyProductSpecMapper.selectByProductId">
         <result column="spec_name" jdbcType="LONGVARCHAR" property="specName"/>
         <result column="spec_images" jdbcType="LONGVARCHAR" property="specImages"/>
         <result column="spec_serial" jdbcType="LONGVARCHAR" property="specSerial"/>
         <result column="spec_storage" jdbcType="INTEGER" property="specStorage"/>
         <result column="spec_price" jdbcType="DECIMAL" property="specPrice"/>
         <result column="spec_cost_price" jdbcType="DECIMAL" property="specCostPrice"/>
     </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `name`, `product_no`, `product_images`, `product_description`, `is_del`, `create_time`, `user_id`
  </sql>
  <select id="selectByExample" parameterType="com.tally.dao.tallyproduct.model.TallyProductExample" resultMap="BaseResultMapDto">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `tally_product`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMapDto">
    select
    <include refid="Base_Column_List"/>
    from `tally_product`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `tally_product`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tally.dao.tallyproduct.model.TallyProductExample">
    delete from `tally_product`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tally.dao.tallyproduct.model.TallyProduct"
          useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_product` (
      `name`, 
      `product_no`, 
      `product_images`, 
      `product_description`,
      `remark`,
      `user_id`
    )
    values (
      #{name,jdbcType=LONGVARCHAR}, 
      #{productNo,jdbcType=LONGVARCHAR}, 
      #{productImages,jdbcType=LONGVARCHAR}, 
      #{productDescription,jdbcType=LONGVARCHAR},
      #{remark,jdbcType=LONGVARCHAR},
      #{userId,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.tally.dao.tallyproduct.model.TallyProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `tally_product`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
      `name`,
      </if>
      <if test="productNo != null">
      `product_no`,
      </if>
      <if test="productImages != null">
      `product_images`,
      </if>
      <if test="productDescription != null">
      `product_description`,
      </if>
      <if test="remark != null">
      `remark`,
      </if>
      <if test="isDel != null">
      `is_del`,
      </if>
      <if test="createTime != null">
      `create_time`,
      </if>
      <if test="userId != null">
      `user_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=LONGVARCHAR},
      </if>
      <if test="productImages != null">
        #{productImages,jdbcType=LONGVARCHAR},
      </if>
      <if test="productDescription != null">
        #{productDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tally.dao.tallyproduct.model.TallyProductExample" resultType="java.lang.Integer">
    select count(*) from `tally_product`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
    <select id="getStockBalance" resultType="java.math.BigDecimal">
      SELECT
          sum(tps.spec_price*tps.spec_storage)
      FROM
          tally_product tp
      LEFT JOIN tally_product_spec tps on tp.id = tps.product_id
      where tp.user_id = #{userId}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update `tally_product`
    <set>
      <if test="record.name != null">
      `name` = #{record.name,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="record.productNo != null">
      `product_no` = #{record.productNo,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="record.productImages != null">
      `product_images` = #{record.productImages,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="record.productDescription != null">
      `product_description` = #{record.productDescription,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="record.isDel != null">
      `is_del` = #{record.isDel,jdbcType=SMALLINT}, 
      </if>
      <if test="record.createTime != null">
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="record.userId != null">
      `user_id` = #{record.userId,jdbcType=INTEGER}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `tally_product`
    <set>
      `name` = #{record.name,jdbcType=LONGVARCHAR}, 
      `product_no` = #{record.productNo,jdbcType=LONGVARCHAR}, 
      `product_images` = #{record.productImages,jdbcType=LONGVARCHAR}, 
      `product_description` = #{record.productDescription,jdbcType=LONGVARCHAR}, 
      `is_del` = #{record.isDel,jdbcType=SMALLINT}, 
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}, 
      `user_id` = #{record.userId,jdbcType=INTEGER}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tally.dao.tallyproduct.model.TallyProduct">
    update `tally_product`
    <set>
      <if test="name != null">
      `name` = #{name,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="productNo != null">
      `product_no` = #{productNo,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="productImages != null">
      `product_images` = #{productImages,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="productDescription != null">
      `product_description` = #{productDescription,jdbcType=LONGVARCHAR}, 
      </if>
      <if test="isDel != null">
      `is_del` = #{isDel,jdbcType=SMALLINT}, 
      </if>
      <if test="createTime != null">
      `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="userId != null">
      `user_id` = #{userId,jdbcType=INTEGER}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tally.dao.tallyproduct.model.TallyProduct">
    update `tally_product`
    <set>
      `name` = #{name,jdbcType=LONGVARCHAR}, 
      `product_no` = #{productNo,jdbcType=LONGVARCHAR}, 
      `product_images` = #{productImages,jdbcType=LONGVARCHAR}, 
      `product_description` = #{productDescription,jdbcType=LONGVARCHAR}, 
      `is_del` = #{isDel,jdbcType=SMALLINT}, 
      `create_time` = #{createTime,jdbcType=TIMESTAMP}, 
      `user_id` = #{userId,jdbcType=INTEGER}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>